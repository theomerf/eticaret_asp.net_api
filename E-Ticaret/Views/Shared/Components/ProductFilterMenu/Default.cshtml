<div class="filter-sidebar sticky-top" style="top: 20px;">
    <div class="card shadow-lg border-0 filter-main-card">
        <div class="card-header bg-gradient-primary text-white border-0 p-4">
            <h5 class="card-title mb-0 d-flex align-items-center">
                <i class="fas fa-filter me-2"></i>
                Ürün Filtreleri
            </h5>
        </div>

        <div class="accordion accordion-flush" id="filterAccordion">
            <!-- Kategoriler Bölümü -->
            <div class="accordion-item border-0">
                <h2 class="accordion-header" id="headingCategories">
                    <button class="accordion-button fw-semibold py-3" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseCategories" aria-expanded="true" aria-controls="collapseCategories">
                        <i class="fas fa-layer-group text-primary me-3"></i>
                        <span>Kategoriler</span>
                        <span class="badge bg-primary ms-auto me-2">12</span>
                    </button>
                </h2>
                <div id="collapseCategories" class="accordion-collapse collapse show"
                     aria-labelledby="headingCategories" data-bs-parent="#filterAccordion">
                    <div class="accordion-body cat-acord">
                        @await Component.InvokeAsync("CategoriesFilter")
                    </div>
                </div>
            </div>

            <!-- Ürün Filtreleri Bölümü -->
            <div class="accordion-item border-0">
                <h2 class="accordion-header" id="headingProductFilters">
                    <button class="accordion-button fw-semibold py-3" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseProductFilters" aria-expanded="true" aria-controls="collapseProductFilters">
                        <i class="fas fa-sliders-h text-primary me-3"></i>
                        <span>Ürün Filtreleri</span>
                    </button>
                </h2>
                <div id="collapseProductFilters" class="accordion-collapse collapse show"
                     aria-labelledby="headingProductFilters" data-bs-parent="#filterAccordion">
                    <div class="accordion-body px-4 pb-4">
                        <form id="filterForm">
                            @if (!string.IsNullOrEmpty(Context.Request.Query["MainCategoryId"]))
                            {
                                <input type="hidden" name="MainCategoryId" id="mainCat" value="@Context.Request.Query["MainCategoryId"]" />
                            }
                            @if (!string.IsNullOrEmpty(Context.Request.Query["SubCategoryId"]))
                            {
                                <input type="hidden" name="SubCategoryId" id="subCat" value="@Context.Request.Query["SubCategoryId"]" />
                            }

                            <!-- Ürün Ara -->
                            <div class="filter-section mb-4">
                                <label for="searchTerm" class="form-label fw-semibold text-dark mb-3">
                                    <i class="fas fa-search text-primary me-2"></i>Ürün Ara
                                </label>
                                <div class="search-container position-relative">
                                    <input type="text" class="form-control form-control-lg border-2 pe-5 filter-input"
                                           id="searchTerm" name="SearchTerm"
                                           placeholder="Ürün adı veya açıklama yazın..."
                                           value="@Context.Request.Query["SearchTerm"]">
                                    <button class="btn search-clear-btn position-absolute top-50 end-0 translate-middle-y me-2"
                                            type="button" id="clearSearch" style="display: none;">
                                        <i class="fas fa-times text-muted"></i>
                                    </button>
                                </div>
                            </div>

                            <!-- Fiyat Aralığı -->
                            <div class="filter-section mb-4">
                                <div class="d-flex align-items-center justify-content-between mb-3">
                                    <label class="form-label fw-semibold text-dark mb-0">
                                        <i class="fas fa-tag text-primary me-2"></i>Fiyat Aralığı
                                    </label>
                                    <div class="price-display bg-light rounded-pill px-3 py-1">
                                        <span id="minPriceDisplay" class="fw-bold text-primary">0</span>
                                        <span class="text-muted mx-1">-</span>
                                        <span id="maxPriceDisplay" class="fw-bold text-primary">100000</span>
                                    </div>
                                </div>
                                <div id="priceRange" class="mb-3"></div>
                                <div class="row g-2">
                                    <div class="col-6">
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0">₺</span>
                                            <input type="number" class="form-control border-start-0 filter-input" id="minPrice" name="MinPrice"
                                                   placeholder="Min" value="@Context.Request.Query["MinPrice"]" min="0">
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="input-group">
                                            <span class="input-group-text bg-light border-end-0">₺</span>
                                            <input type="number" class="form-control border-start-0 filter-input" id="maxPrice" name="MaxPrice"
                                                   placeholder="Max" value="@Context.Request.Query["MaxPrice"]" min="0">
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Markalar -->
                            <div class="filter-section mb-4">
                                <label class="form-label fw-semibold text-dark mb-3">
                                    <i class="fas fa-building text-primary me-2"></i>Markalar
                                </label>
                                <div class="brand-search mb-3">
                                    <input type="text" class="form-control form-control-sm" id="brandSearch"
                                           placeholder="Marka ara...">
                                </div>
                                <div class="brand-list custom-scrollbar" style="max-height: 200px; overflow-y: auto;">
                                    <div class="form-check brand-item mb-3">
                                        <input class="form-check-input filter-input" type="radio" name="Brand" id="brandAll" value=""
                                               @(string.IsNullOrEmpty(Context.Request.Query["Brand"]) ? "checked" : "")>
                                        <label class="form-check-label d-flex justify-content-between align-items-center w-100" for="brandAll">
                                            <span class="fw-medium">Tüm Markalar</span>
                                            <span class="badge bg-secondary rounded-pill">Tümü</span>
                                        </label>
                                    </div>
                                    @{
                                        var brands = new[] {
                                                                        new { Name = "Apple", Count = 45 },
                                                                        new { Name = "Samsung", Count = 38 },
                                                                        new { Name = "Sony", Count = 29 },
                                                                        new { Name = "Huawei", Count = 22 },
                                                                        new { Name = "Lenovo", Count = 18 },
                                                                        new { Name = "Sony", Count = 15 },
                                                                        new { Name = "Dell", Count = 12 },
                                                                        new { Name = "Vestel", Count = 10 }
                                                                        };
                                        foreach (var brand in brands)
                                        {
                                            <div class="form-check brand-item mb-3" data-brand="@brand.Name.ToLower()">
                                                <input class="form-check-input filter-input" type="radio" name="Brand" id="brand@(brand.Name)" value="@brand.Name"
                                                       @(Context.Request.Query["Brand"] == brand.Name ? "checked" : "")>
                                                <label class="form-check-label d-flex justify-content-between align-items-center w-100" for="brand@(brand.Name)">
                                                    <span>@brand.Name</span>
                                                    <span class="badge bg-light text-dark rounded-pill">@brand.Count</span>
                                                </label>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>

                            <!-- Özel Filtreler -->
                            <div class="filter-section mb-4">
                                <label class="form-label fw-semibold text-dark mb-3">
                                    <i class="fas fa-star text-primary me-2"></i>Özel Filtreler
                                </label>
                                <div class="special-filters">
                                    <div class="form-check form-switch mb-3 p-0">
                                        <div class="custom-switch-card d-flex align-items-center justify-content-between p-3 rounded-3 border">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-fire text-danger me-3"></i>
                                                <div>
                                                    <div class="fw-medium">En Çok Satanlar</div>
                                                    <small class="text-muted">Popüler ürünler</small>
                                                </div>
                                            </div>
                                            <input class="form-check-input ms-0 filter-input" type="checkbox" id="bestSellers" name="IsShowCase" value="true"
                                                   @(Context.Request.Query["IsShowCase"] == "true" ? "checked" : "")>
                                        </div>
                                    </div>
                                    <div class="form-check form-switch mb-3 p-0">
                                        <div class="custom-switch-card d-flex align-items-center justify-content-between p-3 rounded-3 border">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-percentage text-success me-3"></i>
                                                <div>
                                                    <div class="fw-medium">İndirimli Ürünler</div>
                                                    <small class="text-muted">Özel fiyatlar</small>
                                                </div>
                                            </div>
                                            <input class="form-check-input ms-0 filter-input" type="checkbox" id="discountedItems" name="IsDiscount" value="true"
                                                   @(Context.Request.Query["IsDiscount"] == "true" ? "checked" : "")>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <input type="hidden" name="PageNumber" value="1" id="pageNumber">
                            <input type="hidden" name="PageSize" value="6" id="pageSize">

                            <div class="d-grid gap-2 mt-4">
                                <button type="button" class="btn btn-primary btn-lg fw-semibold py-3 filter-apply-btn" id="applyFilters">
                                    <i class="fas fa-search me-2"></i>Filtreleri Uygula
                                </button>
                                <button type="button" class="btn btn-outline-secondary" id="resetAllFilters">
                                    <i class="fas fa-undo me-2"></i>Tüm Filtreleri Temizle
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Son Eklenen Ürünler 
            <div class="accordion-item border-0">
                <h2 class="accordion-header" id="headingLatest">
                    <button class="accordion-button collapsed fw-semibold py-3" type="button" data-bs-toggle="collapse"
                            data-bs-target="#collapseLatest" aria-expanded="false" aria-controls="collapseLatest">
                        <i class="fas fa-clock text-primary me-3"></i>
                        <span>Son Eklenen Ürünler</span>
                    </button>
                </h2>
                <div id="collapseLatest" class="accordion-collapse collapse"
                     aria-labelledby="headingLatest" data-bs-parent="#filterAccordion">
                    <div class="accordion-body px-4 pb-4">
                        <div products="" number="3"></div>
                    </div>
                </div>
            </div>-->
        </div>
    </div>
</div> 

<div id="loadingOverlay" style="display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.3); z-index: 9999;">
    <div class="d-flex justify-content-center align-items-center h-100">
        <div class="bg-white rounded p-4 text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Yükleniyor...</span>
            </div>
            <div class="mt-2">Filtreler uygulanıyor...</div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        let priceSlider = null;
        let isInitialized = false;
        let debounceTimer = null;

        let currentFilters = {
            searchTerm: '',
            minPrice: 0,
            maxPrice: 100000,
            brand: '',
            isShowCase: false,
            isDiscount: false
        };

        function initializeFiltersFromURL() {
            const urlParams = new URLSearchParams(window.location.search);

            currentFilters.searchTerm = urlParams.get('SearchTerm') || '';
            currentFilters.minPrice = parseInt(urlParams.get('MinPrice')) || 0;
            currentFilters.maxPrice = parseInt(urlParams.get('MaxPrice')) || 100000;
            currentFilters.brand = urlParams.get('Brand') || '';
            currentFilters.isShowCase = urlParams.get('IsShowCase') === 'true';
            currentFilters.isDiscount = urlParams.get('IsDiscount') === 'true';

            $('#searchTerm').val(currentFilters.searchTerm);
            $('#minPrice').val(currentFilters.minPrice === 0 ? '' : currentFilters.minPrice);
            $('#maxPrice').val(currentFilters.maxPrice === 100000 ? '' : currentFilters.maxPrice);

            if (currentFilters.brand) {
                $(`input[name="Brand"][value="${currentFilters.brand}"]`).prop('checked', true);
            } else {
                $('#brandAll').prop('checked', true);
            }

            $('#bestSellers').prop('checked', currentFilters.isShowCase);
            $('#discountedItems').prop('checked', currentFilters.isDiscount);
        }

        function initializePriceSlider() {
            const priceRangeElement = document.getElementById('priceRange');

            if (priceRangeElement && typeof noUiSlider !== 'undefined') {
                if (priceSlider) {
                    priceSlider.destroy();
                }

                priceSlider = noUiSlider.create(priceRangeElement, {
                    start: [currentFilters.minPrice, currentFilters.maxPrice],
                    connect: true,
                    step: 50,
                    range: {
                        'min': 0,
                        'max': 100000
                    },
                    format: {
                        to: function (value) {
                            return Math.round(value);
                        },
                        from: function (value) {
                            return Number(value);
                        }
                    },
                    behaviour: 'tap-drag',
                });

                priceSlider.on('update', function (values, handle) {
                    const minVal = Math.round(values[0]);
                    const maxVal = Math.round(values[1]);

                    $('#minPriceDisplay').text(minVal);
                    $('#maxPriceDisplay').text(maxVal);

                    if (isInitialized) {
                        $('#minPrice').val(minVal === 0 ? '' : minVal);
                        $('#maxPrice').val(maxVal === 100000 ? '' : maxVal);
                    }

                });

                priceSlider.on('change', function (values, handle) {
                    debouncedApplyFilters();
                });
            }

            $('#minPriceDisplay').text(currentFilters.minPrice);
            $('#maxPriceDisplay').text(currentFilters.maxPrice);
        }

        function debouncedApplyFilters() {
            clearTimeout(debounceTimer);
            debounceTimer = setTimeout(function() {
                applyFiltersAjax();
            }, 500);
        }

        function applyFiltersAjax() {
            $('#loadingOverlay').show();

            const formData = new FormData($('#filterForm')[0]);
            const params = new URLSearchParams();

            // MainCategoryId ve SubCategoryId query string'de varsa, formData'da olmasa bile ekle
            const urlParams = new URLSearchParams(window.location.search);
            const mainCategoryId = urlParams.get('MainCategoryId');
            const subCategoryId = urlParams.get('SubCategoryId');

            if (mainCategoryId && !formData.has('MainCategoryId')) {
                params.append('MainCategoryId', mainCategoryId);
            }
            if (subCategoryId && !formData.has('SubCategoryId')) {
                params.append('SubCategoryId', subCategoryId);
            }

            for (let [key, value] of formData.entries()) {
                if (value && value !== '' && value !== '0') {
                    params.append(key, value);
                }
            }

            const newURL = window.location.pathname + (params.toString() ? '?' + params.toString() : '');
            window.history.pushState({}, '', newURL);

            $.ajax({
                url: '@Url.Action("Index")',
                type: 'GET',
                headers: {
                    'X-Filter-Request': 'true'
                },
                data: params.toString(),
                success: function(response) {
                    if (response.success) {
                        $('#productContainer').html(response.html);
                    } else {
                        console.error('Filter error:', response.message);
                    }
                },
                error: function(xhr, status, error) {
                    console.error('AJAX error:', error);
                    window.location.reload();
                },
                complete: function() {
                    $('#loadingOverlay').hide();
                    $('.filter-apply-btn').html('<i class="fas fa-search me-2"></i>Filtreleri Uygula');
                }
            });
        }

        $('#minPrice, #maxPrice').on('input', function() {
            const minVal = parseInt($('#minPrice').val()) || 0;
            const maxVal = parseInt($('#maxPrice').val()) || 100000;

            if (minVal > maxVal && $(this).attr('id') === 'minPrice') {
                $(this).val(maxVal);
                return;
            }
            if (maxVal < minVal && $(this).attr('id') === 'maxPrice') {
                $(this).val(minVal);
                return;
            }

            isInitialized = true;
            if (priceSlider) {
                priceSlider.set([minVal, maxVal]);
            }
            isInitialized = false;

        });

        $('#minPrice, #maxPrice').on('change', function() {
            debouncedApplyFilters();
        });

        $('#searchTerm').on('input', function() {
            toggleSearchClear();
            debouncedApplyFilters();
        });

        function toggleSearchClear() {
            const searchInput = $('#searchTerm');
            const clearBtn = $('#clearSearch');

            if (searchInput.val().length > 0) {
                clearBtn.show();
            } else {
                clearBtn.hide();
            }
        }

        $('#clearSearch').click(function() {
            $('#searchTerm').val('').trigger('input');
        });

        $('#brandSearch').on('input', function() {
            const searchTerm = $(this).val().toLowerCase();
            $('.brand-item').each(function() {
                const brandText = $(this).find('label span').first().text().toLowerCase();
                if (brandText.includes(searchTerm) || searchTerm === '') {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });

        $('.filter-input').on('change', function() {
            debouncedApplyFilters();
        });

        $('#applyFilters').click(function() {
            $(this).html('<i class="fas fa-spinner fa-spin me-2"></i>Filtreleniyor...');
            applyFiltersAjax();
        });

        $('#clearAllFilters, #resetAllFilters').click(function() {
            $('#searchTerm').val('');
            $('#minPrice, #maxPrice').val('');
            $('#brandAll').prop('checked', true);
            $('#bestSellers, #discountedItems').prop('checked', false);
            $('#brandSearch').val('');

            if (priceSlider) {
                priceSlider.set([0, 100000]);
            }

            $('.brand-item').show();
            toggleSearchClear();
            applyFiltersAjax();
        });

        $('.custom-switch-card').hover(
            function() {
                $(this).addClass('shadow-sm border-primary');
            },
            function() {
                $(this).removeClass('shadow-sm border-primary');
            }
        );

        initializeFiltersFromURL();
        initializePriceSlider();
        toggleSearchClear();
        isInitialized = true;
    });
</script>